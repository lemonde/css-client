$goutiere: map-get($pas, m);
$goutiere-large: map-get($pas, l);

/**
 * grid system du site :
 *
 *
 * pour créer une nouvelle colonne :
 *
 *    @include cell-responsive(
 *        $modifier: '_auto',                    => donne le nom du modifier ( .grille-cell._auto )
 *        $pbs: 'all', 'from-large', 'medium') { => on liste les breakpoints pour généré les variantes
 *            flex: 1;                           => on déclare la règle
 *    }
 *
 * mobile-first: les valeurs par defaut concernent les mobiles et + haut
 * ex : ( grille-cell _1sur2-from-medium ) = 100% en mobile, 50% à partir de medium
 */

.grille {
    display: flex;
    align-items: stretch;
    justify-content: space-between;
    flex-flow: row wrap;

    &._aligne-centre {
        align-items: center;
    }

    &._justifie-centre {
      justify-content: center;
    }

    &._espace-autour {
        justify-content: space-around;
    }

    // permet d'égaliser des colonnes en hauteur
    &._hauteur-egale > &-cell {
      display: flex;
    }

    &-cell {
        flex: 0 0 100%;

        // permet de gérer des alignement verticaux
        &._aligne-haut {
            align-self: flex-start;
        }

        &._aligne-centre {
            align-self: center;
        }

        &._aligne-bas {
            align-self: flex-end;
        }
    }
}


// RESPONSIVE CELLS //
@mixin cell-responsive($modifier, $pbs) {
  @each $key in $pbs {
    @if $key == 'all' { // pour toutes
      .grille-cell.#{$modifier} {
         @content;
      }
    } @else {
      .grille-cell.#{$modifier}-#{$key} {
        @include screen($key) {
          @content;
        }
      }
    }
  }
}

// RESPONSIVE GRID MODIFIER //
@mixin grid-modifier-responsive($modifier, $pbs) {
  @each $key in $pbs {
    @if $key == 'all' { // pour toutes
      .grille.#{$modifier} {
         @content;
      }
    } @else {
      .grille.#{$modifier}-#{$key} {
        @include screen($key) {
          @content;
        }
      }
    }
  }
}

@include grid-modifier-responsive(
    $modifier: '_goutiere',
    $pbs: 'all' 'medium') {

    margin-left: -($goutiere / 2);
    margin-right: -($goutiere / 2);

    > .grille-cell {
      padding-left: ($goutiere / 2);
      padding-right: ($goutiere / 2);
    }
}

@include grid-modifier-responsive(
    $modifier: '_goutiere-large',
    $pbs: 'all' 'medium') {

    margin-left: -($goutiere-large / 2);
    margin-right: -($goutiere-large / 2);

    > .grille-cell {
      padding-left: ($goutiere-large / 2);
      padding-right: ($goutiere-large / 2);
    }
}

// /!\ il faut que les règles 'tous devices' soient déclarés avant.

// avec le regroupement auto des media-queries via postCSS
// l'ordre des declarartion sera bonne
// plus besoin de séparer les all et les autres
// sinon il faut envisager un autre moyen de générer la grille


@include cell-responsive(
  $modifier: '_auto',
  $pbs: 'all') {
    flex: 1;
}

@include cell-responsive(
  $modifier: '_1sur3',
  $pbs: 'all') {
    flex: 0 0 33.333%;
}

@include cell-responsive(
  $modifier: '_initial',
  $pbs: 'all') {
    flex: initial;
}

@include cell-responsive(
  $modifier: '_1sur2',
  $pbs: 'all') {
    flex: 0 0 50%;
}

@include cell-responsive(
  $modifier: '_1sur4',
  $pbs:  'all' ) {
    flex: 0 0 25%;
}

@include cell-responsive(
  $modifier: '_full',
  $pbs: 'all' ) {
    flex: 0 0 100%;
}

@include cell-responsive(
  $modifier: '_auto',
  $pbs: 'medium' 'from-medium' 'from-large' ) {
    flex: 1;
}

@include cell-responsive(
  $modifier: '_taillepub',
  $pbs: 'from-medium' 'from-large' ) {
    flex: 0 0 300px;
}

@include cell-responsive(
  $modifier: '_1sur2',
  $pbs : 'medium' 'from-medium' 'from-large' ) {
    flex: 0 0 50%;
}

@include cell-responsive(
  $modifier: '_1sur3',
  $pbs: 'medium' 'from-medium' 'from-large' ) {
    flex: 0 0 33.333%;
}

@include cell-responsive(
  $modifier: '_1sur4',
  $pbs: 'medium' 'from-medium' 'from-large' ) {
    flex: 0 0 25%;
}

@include cell-responsive(
  $modifier: '_full',
  $pbs: 'small' 'medium' 'from-large' ) {
    flex: 0 0 100%;
}

@include cell-responsive(
  $modifier: '_initial',
  $pbs: 'from-medium' 'from-large') {
    flex: initial;
}
